@page "/servers"
@rendermode InteractiveServer


<h3>Servers</h3>

<br />
<a href="/servers/add" class="btn btn-link">Add Server</a>
<br />
<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card @(selecterCity.Equals(city,StringComparison.OrdinalIgnoreCase)?"border-primary":"")">
                    <img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-info" @onclick="@(() => { SelectCity(city); })"> @city </button>
                    </div>
                </div>
               
            </div>
        }
    </div>
</div>

<br />
<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="search server" @bind-value="serverFilter"/>
    <button class="btn btn-outline-primary" type="button" id="button-search" @onclick="HandelSearch"> Search </button>
</div>
<br />
<ServerListComponent @rendermode="InteractiveServer" CityName="@selecterCity"></ServerListComponent>

@serverFilter
@code {

    private List<string> cities = CitiesRepository.GetCities();
    private string selecterCity = "Toronto";
    private string serverFilter = "";
 
   

    private void SelectCity(string city)
    {
        this.selecterCity = city;
        //this.servers = ServersRepository.GetServersByCity(selecterCity);
    }

   

    private void HandelSearch()
    {
        //this.servers = ServersRepository.SearchServers(serverFilter);
        this.selecterCity = string.Empty;
    }
}
