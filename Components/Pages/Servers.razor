@page "/servers"
@inject NavigationManager _NavigationManager;

<h3>Servers</h3>

<br />
<a href="/servers/add" class="btn btn-link">Add Server</a>
<br />
<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card">
                    <img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-info"> @city </button>
                    </div>
                </div>
               
            </div>
        }
    </div>
</div>
<ul>
    @foreach (var sr in servers)
    {
        <li>
            @sr.Name in @sr.City is
            <span style="color:@((sr.IsOnline ? "green":"red"))">
                @(sr.IsOnline ? "online" : "offline")
            </span>
            &nbsp;
            <a href="/servers/@sr.Id" class="btn btn-link">Edit</a>
            &nbsp;
            <EditForm Model="sr" FormName="@($"{sr.Id}")" OnValidSubmit="@(() => { DeleteServer(@sr.Id); })">
                <button class="btn btn-danger" type="submit">Delete</button>
            </EditForm>
           
        </li>
    }
</ul>
@code {

    private List<Server> servers = ServersRepository.GetServersByCity("Toronto");
    private List<string> cities = CitiesRepository.GetCities();


    private void DeleteServer(int id)
    {
        if (id!=0)
        {
            ServersRepository.DeleteServer(id);
            _NavigationManager.Refresh();
        }

    }
}
