@page "/quickgrid"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.QuickGrid
@inject NavigationManager _NavigationManager;
<h3>QuickGridDemo</h3>
<br/>
@if (servers != null)
{
    <QuickGrid Items="servers.AsQueryable()" Pagination="paginationState">
        <PropertyColumn Property="s=>s.Name"></PropertyColumn>
        <PropertyColumn Property="s=>s.City" Sortable="true"></PropertyColumn>
        <TemplateColumn Title="Status" Sortable="true" SortBy="GridSort<Server>.ByDescending(s=>s.IsOnline)">
            @if (context.IsOnline)
            {
                <div style="color: @((context.IsOnline ? "green" : "red"))">
                    OnLine
                </div>
            }
            else
            {
                <div style="color: @((context.IsOnline ? "green" : "red"))">
                    OffLine
                </div>
            }
        </TemplateColumn>
        <TemplateColumn Title=" People Online">
            @if (context.IsOnline)
            {
                Random random = new Random();
                int randomNumber = random.Next(0, 500);
                <text>@randomNumber</text>
            }
            else
            {
                <text>N/A</text>
            }
        </TemplateColumn>
    
        <TemplateColumn>
            @if (context.IsOnline)
            {
                <button class="btn btn-outline-danger" type="button" @onclick="@(() => { context.IsOnline = false; })">
                    Turn Off
                </button>
            }
            else
            {
                <button class="btn btn-outline-success" type="button" @onclick="@(() => { context.IsOnline = true; })">
                    Turn On
                </button>
            }
        </TemplateColumn>
    
    
        <TemplateColumn>
            <ChildContent Context="server">
                <EditForm Model="server" FormName="@($"{server.Id}")" OnValidSubmit="@(() => { DeleteServer(@server.Id); })">
                    <button class="btn btn-danger" type="submit">Delete</button>
                </EditForm>
            </ChildContent>
        </TemplateColumn>
    </QuickGrid>
    <Paginator State="paginationState"></Paginator>
}

@code {
    private List<Server>? servers = ServersRepository.GetServres();
    private PaginationState paginationState = new PaginationState {ItemsPerPage = 5};
    private void DeleteServer(int id)
    {
        if (id != 0)
        {
            ServersRepository.DeleteServer(id);
            _NavigationManager.NavigateTo("/quickgrid", true);
        }

    }
}
